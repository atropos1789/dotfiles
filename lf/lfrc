## --------------------- ##
## Configuration Options ##
## --------------------- ##

    # anchorfind       bool      (default true)
    # autoquit         bool      (default false)
    # borderfmt        string    (default "\033[0m")
    # cleaner          string    (default '')
    # cursoractivefmt  string    (default "\033[7m")
    # cursorparentfmt  string    (default "\033[7m")
    # cursorpreviewfmt string    (default "\033[4m")
set cursorpreviewfmt "\033[7m"
    # dircache         bool      (default true)
    # dircounts        bool      (default false)
    # dirfirst         bool      (default true)
set dirfirst false
    # dironly          bool      (default false)
    # dirpreviews      bool      (default false)
    # drawbox          bool      (default false)
set drawbox true
    # dupfilefmt       string    (default '%f.~%n~')
    # errorfmt         string    (default "\033[7;31;47m")
    # filesep          string    (default "\n")
    # findlen          int       (default 1)
set findlen 0
    # globsearch       bool      (default false)
set globsearch true
    # hidden           bool      (default false)
set hidden true
    # hiddenfiles      []string  (default '.*')
    # history          bool      (default true)
    # icons            bool      (default false)
    # ifs              string    (default '')
set ifs "\n"
    # ignorecase       bool      (default true)
    # ignoredia        bool      (default true)
    # incfilter        bool      (default false)
    # incsearch        bool      (default false)
    # info             []string  (default '')
set info size
    # infotimefmtnew   string    (default 'Jan _2 15:04')
    # infotimefmtold   string    (default 'Jan _2  2006')
    # mouse            bool      (default false)
    # number           bool      (default false)
set number true
    # numberfmt        string    (default "\033[33m")
    # period           int       (default 0)
    # preserve         []string  (default "mode")
    # preview          bool      (default true)
    # previewer        string    (default '')
set previewer '/home/kira/.config/lf/preview.sh'
    # promptfmt        string    (default "\033[32;1m%u@%h\033[0m:\033[34;1m%d\033[0m\033[1m%f\033[0m")
    # ratios           []int     (default '1:2:3')
    # relativenumber   bool      (default false)
    # reverse          bool      (default false)
    # ruler            []string  (default 'acc:progress:selection:filter:ind')
    # rulerfmt         string    (default "%a  |%p  |\033[7;31m %m \033[0m  |\033[7;33m %c \033[0m  |\033[7;35m %s \033[0m  |\033[7;34m %f \033[0m  |%i/%t")
    # scrolloff        int       (default 0)
set scrolloff 10
    # selmode          string    (default 'all')
    # shell            string    (default 'sh' for Unix and 'cmd' for Windows)
set shell sh
    # shellflag        string    (default '-c' for Unix and '/c' for Windows)
    # shellopts        []string  (default '')
set shellopts '-eu'
    # sixel            bool      (default false)
    # smartcase        bool      (default true)
    # smartdia         bool      (default false)
    # sortby           string    (default 'natural')
set sortby 'name'
    # statfmt          string    (default "\033[36m%p\033[0m| %c| %u| %g| %S| %t| -> %l")
    # tabstop          int       (default 8)
    # tagfmt           string    (default "\033[31m")
    # tempmarks        string    (default '')
    # timefmt          string    (default 'Mon Jan _2 15:04:05 2006')
    # truncatechar     string    (default '~')
    # truncatepct      int       (default 100)
    # waitmsg          string    (default 'Press any key to continue')
    # wrapscan         bool      (default true)
    # wrapscroll       bool      (default false)
set wrapscroll true
    # user_{option}    string    (default none)

## --------------- ##
## Custom Commands ##
## --------------- ##

# commands that do not open new windows need to be run as lf -remote "send $id <command> \$f";;
cmd open &/home/kira/.config/lf/open.sh $f


# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; trash-put $fx

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract &{{
    case "$f" in 
        *.a|*.ace|*.alz|*.arc|*.arj|*.bz|*.bz2|*.cab|*.cpio|*.deb|*.gz|*.jar|*.lha|*.lz|*.lzh|*.lzma|*.lzo|*.rpm|*.rz|*.t7z|*.tar|*.tbz|*.tbz2|*.tgz|*.tlz|*.txz|*.tZ|*.tzo|*.war|*.xpi|*.xz|*.Z|*.zip)
            set -f
            mkdir -p ${f%%.*}
            cd ${f%%.*}
            case $f in
                *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
                *.tar.gz|*.tgz) tar xzvf $f;;
                *.tar.xz|*.txz) tar xJvf $f;;
                *.zip) unzip $f;;
                *.rar) unrar x $f;;
                *.7z) 7z x $f;;
            esac
            cd ..
            ;;
        *) exit 0;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd newtext $$EDITOR

# write command to compile .tex file via latexmk -pdflatex='pdflatex -interaction=nonstopmode' -pvc -pdf [FILENAME]

cmd compile_latex &{{
    if [ -f ~/.local/share/lf/latexmk_pid.txt ]; then
        lf -remote "send $id echo latexmk already in progress"
    else
        lf -remote "send $id echo latexmk starting"
        latexmk -pdflatex='pdflatex -interaction=nonstopmode' -pvc -pdf $f &
        echo $! > ~/.local/share/lf/latexmk_pid.txt
    fi
}}

cmd stop_compile_latex &{{
    if [ -f ~/.local/share/lf/latexmk_pid.txt ]; then
        kill -s TERM $(cat ~/.local/share/lf/latexmk_pid.txt)
        rm ~/.local/share/lf/latexmk_pid.txt
    else
        lf -remote "send $id echo latexmk not in progress"
    fi
}}

## --------------- ##
## Mapping Options ##
## --------------- ##

# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>

# use enter for shell commands
map <enter> shell

# show the result of execution of previous commands
map ` !true

# requires custom command trash
map <delete> trash

map i ${{/home/kira/.config/lf/preview.sh $f | bat --paging='always' --style 'plain,changes,grid,numbers,snip' --theme='base16'}}

map x :extract $f

map m newtext


## ----- ##
## Notes ##
## ----- ##

# interpreter for shell commands
# set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
# set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
# set ifs "\n"


# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>
